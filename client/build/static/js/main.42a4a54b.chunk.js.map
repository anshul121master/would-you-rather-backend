{"version":3,"sources":["utils/_DATA.js","utils/api.js","actions/questions.js","actions/users.js","actions/loading.js","actions/shared.js","components/PollTeaser.js","components/UserCard.js","components/Dashboard.js","components/PollQuestion.js","components/PollResult.js","components/ErrorPage.js","components/PollDashboard.js","components/Leaderboard.js","components/LeaderboardDb.js","actions/authUser.js","components/Login.js","components/Navigationbar.js","components/NewQuestion.js","components/Logout.js","components/App.js","reducers/index.js","reducers/authUser.js","reducers/questions.js","reducers/users.js","reducers/loading.js","middlewares/logger.js","middlewares/index.js","index.js"],"names":["users","sarahedo","id","name","avatarURL","answers","questions","tylermcginnis","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","saveQuestionAnswer","info","qid","answer","_saveQuestionAnswer","RECEIVE_QUESTIONS","ADD_QUESTION","handleAddQuestion","details","dispatch","then","type","addQuestion","RECEIVE_USERS","DATA_LOADED","ANSWER_POLL","loadData","fetch","json","receiveQuestions","receiveUsers","loading","setLoading","answerPoll","handleAnswerPoll","catch","e","console","warn","alert","PollTeaser","btnStyle","padding","borderRadius","border","color","backgroundColor","this","props","viewPollLink","className","style","fontWeight","fontSize","charAt","toUpperCase","to","Component","connect","ownProps","UserCard","username","avatar","margin","componentName","src","alt","children","userId","Dashboard","state","showAnswered","filterQuestions","setState","styles","background","authUser","pathname","from","onClick","paddingLeft","answered","map","ques","pollTeaser","listStyle","unanswered","answeredIds","Object","keys","values","filter","includes","sort","a","b","PollQuestion","optionSelected","answerSubmitted","handleInputChange","event","value","target","handlePollSubmit","preventDefault","marginTop","redirectTo","onSubmit","onChange","htmlFor","disabled","PollResult","optionOneVotesCount","optionTwoVotesCount","answeredOption","totalVotes","optionOneVotes","length","ErrorPage","PollDashboard","location","invalidId","componentToRender","match","params","optionTwoVotes","Leaderboard","userObj","questionsAnswered","questionsAsked","totalScore","LeaderboardDb","usersInfo","leaderboard","SET_AUTH_USER","LOGOUT","setAuthUser","authUserId","Login","submit","handleUserChange","currentState","handleLogin","undefined","userIds","userSelected","Navigationbar","navContainer","display","justifyContent","navItems","exact","activeClassName","marginLeft","NewQuestion","handleChange","handleSubmit","required","Logout","App","path","component","combineReducers","action","logger","store","next","group","log","returnValue","getState","groupEnd","applyMiddleware","thunk","createStore","rootReducer","middleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42a4a54b.chunk.js","sourcesContent":["let users = {\r\n  sarahedo: {\r\n    id: 'sarahedo',\r\n    name: 'Sarah Edo',\r\n    avatarURL: \"https://tylermcginnis.com/would-you-rather/sarah.jpg\",\r\n    answers: {\r\n      \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\r\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\r\n      \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\r\n      \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\r\n    },\r\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\r\n  },\r\n  tylermcginnis: {\r\n    id: 'tylermcginnis',\r\n    name: 'Tyler McGinnis',\r\n    avatarURL: \"https://tylermcginnis.com/would-you-rather/tyler.jpg\",\r\n    answers: {\r\n      \"vthrdm985a262al8qx3do\": 'optionOne',\r\n      \"xj352vofupe1dqz9emx13r\": 'optionTwo',\r\n    },\r\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\r\n  },\r\n  johndoe: {\r\n    id: 'johndoe',\r\n    name: 'John Doe',\r\n    avatarURL: \"https://tylermcginnis.com/would-you-rather/dan.jpg\",\r\n    answers: {\r\n      \"xj352vofupe1dqz9emx13r\": 'optionOne',\r\n      \"vthrdm985a262al8qx3do\": 'optionTwo',\r\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\r\n    },\r\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\r\n  }\r\n}\r\n\r\nlet questions = {\r\n  \"8xf0y6ziyjabvozdd253nd\": {\r\n    id: '8xf0y6ziyjabvozdd253nd',\r\n    author: 'sarahedo',\r\n    timestamp: 1467166872634,\r\n    optionOne: {\r\n      votes: ['sarahedo'],\r\n      text: 'have horrible short term memory',\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: 'have horrible long term memory'\r\n    }\r\n  },\r\n  \"6ni6ok3ym7mf1p33lnez\": {\r\n    id: '6ni6ok3ym7mf1p33lnez',\r\n    author: 'johndoe',\r\n    timestamp: 1468479767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'become a superhero',\r\n    },\r\n    optionTwo: {\r\n      votes: ['johndoe', 'sarahedo'],\r\n      text: 'become a supervillain'\r\n    }\r\n  },\r\n  \"am8ehyc8byjqgar0jgpub9\": {\r\n    id: 'am8ehyc8byjqgar0jgpub9',\r\n    author: 'sarahedo',\r\n    timestamp: 1488579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'be telekinetic',\r\n    },\r\n    optionTwo: {\r\n      votes: ['sarahedo'],\r\n      text: 'be telepathic'\r\n    }\r\n  },\r\n  \"loxhs1bqm25b708cmbf3g\": {\r\n    id: 'loxhs1bqm25b708cmbf3g',\r\n    author: 'tylermcginnis',\r\n    timestamp: 1482579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'be a front-end developer',\r\n    },\r\n    optionTwo: {\r\n      votes: ['sarahedo'],\r\n      text: 'be a back-end developer'\r\n    }\r\n  },\r\n  \"vthrdm985a262al8qx3do\": {\r\n    id: 'vthrdm985a262al8qx3do',\r\n    author: 'tylermcginnis',\r\n    timestamp: 1489579767190,\r\n    optionOne: {\r\n      votes: ['tylermcginnis'],\r\n      text: 'find $50 yourself',\r\n    },\r\n    optionTwo: {\r\n      votes: ['johndoe'],\r\n      text: 'have your best friend find $500'\r\n    }\r\n  },\r\n  \"xj352vofupe1dqz9emx13r\": {\r\n    id: 'xj352vofupe1dqz9emx13r',\r\n    author: 'johndoe',\r\n    timestamp: 1493579767190,\r\n    optionOne: {\r\n      votes: ['johndoe'],\r\n      text: 'write JavaScript',\r\n    },\r\n    optionTwo: {\r\n      votes: ['tylermcginnis'],\r\n      text: 'write Swift'\r\n    }\r\n  },\r\n}\r\n\r\nfunction generateUID () {\r\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\r\n}\r\n\r\nexport function _getUsers () {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({...users}), 1000)\r\n  })\r\n}\r\n\r\nexport function _getQuestions () {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({...questions}), 1000)\r\n  })\r\n}\r\n\r\nfunction formatQuestion ({ optionOneText, optionTwoText, author }) {\r\n  return {\r\n    id: generateUID(),\r\n    timestamp: Date.now(),\r\n    author,\r\n    optionOne: {\r\n      votes: [],\r\n      text: optionOneText,\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: optionTwoText,\r\n    }\r\n  }\r\n}\r\n\r\nexport function _saveQuestion (question) {\r\n  return new Promise((res, rej) => {\r\n    const authedUser = question.author;\r\n    const formattedQuestion = formatQuestion(question);\r\n\r\n    setTimeout(() => {\r\n      questions = {\r\n        ...questions,\r\n        [formattedQuestion.id]: formattedQuestion\r\n      }\r\n      \r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\r\n        }\r\n      }\r\n\r\n      res(formattedQuestion)\r\n    }, 1000)\r\n  })\r\n}\r\n\r\nexport function _saveQuestionAnswer ({ authedUser, qid, answer }) {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => {\r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          answers: {\r\n            ...users[authedUser].answers,\r\n            [qid]: answer\r\n          }\r\n        }\r\n      }\r\n\r\n      questions = {\r\n        ...questions,\r\n        [qid]: {\r\n          ...questions[qid],\r\n          [answer]: {\r\n            ...questions[qid][answer],\r\n            votes: questions[qid][answer].votes.concat([authedUser])\r\n          }\r\n        }\r\n      }\r\n\r\n      res()\r\n    }, 500)\r\n  })\r\n}\r\n","import {\r\n  _getUsers,\r\n  _getQuestions,\r\n  _saveQuestion,\r\n  _saveQuestionAnswer\r\n} from './_DATA';\r\n\r\n// export function getData() {\r\n//   return Promise.all([_getUsers(), _getQuestions()]).then(\r\n//     ([users, questions]) => ({\r\n//       users,\r\n//       questions\r\n//     })\r\n//   );\r\n// }\r\n\r\nexport function getData() {\r\n return fetch('http://localhost:9000/initdata').then(res => res.json());\r\n}\r\n\r\nexport function saveQuestion(info) {\r\n  return _saveQuestion(info);\r\n}\r\n\r\nexport function saveQuestionAnswer(info) {\r\n  return _saveQuestionAnswer(info);\r\n}","import { saveQuestion } from '../utils/api'\r\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS';\r\nexport const ADD_QUESTION = \"ADD_QUESTION\";\r\n\r\nexport function receiveQuestions(questions) {\r\n  return {\r\n    type: RECEIVE_QUESTIONS,\r\n    questions\r\n  };\r\n}\r\n\r\n\r\nfunction addQuestion(question){\r\n  return{\r\n    type: ADD_QUESTION,\r\n    question\r\n  }\r\n}\r\n\r\nexport function handleAddQuestion(details) {\r\n  //{optionOneText, optionTwoText, author}\r\n  return dispatch => {\r\n    return saveQuestion(details).then(question => {\r\n      dispatch(addQuestion(question));\r\n    });\r\n  };\r\n}","export const RECEIVE_USERS = 'RECEIVE_USERS';\r\n\r\nexport function receiveUsers(users) {\r\n  return {\r\n    type: RECEIVE_USERS,\r\n    users\r\n  };\r\n}","export const DATA_LOADED = 'DATA_LOADED';\r\n\r\nexport function setLoading(loading) {\r\n  return {\r\n    type: DATA_LOADED,\r\n    loading\r\n  };\r\n}","import { getData, saveQuestionAnswer, saveQuestion } from \"../utils/api\";\r\nimport { receiveQuestions } from \"../actions/questions\";\r\nimport { receiveUsers } from \"../actions/users\";\r\nimport { setLoading } from \"../actions/loading\";\r\n\r\nexport const ANSWER_POLL = \"ANSWER_POLL\";\r\n\r\nlet loading = false;\r\nexport function loadData() {\r\n  return dispatch => {\r\n    return getData().then(({ users, questions }) => {\r\n      dispatch(receiveQuestions(questions));\r\n      dispatch(receiveUsers(users));\r\n      dispatch(setLoading(loading));\r\n    });\r\n  };\r\n}\r\n\r\nfunction answerPoll(details) {\r\n  return {\r\n    type: ANSWER_POLL,\r\n    details\r\n  };\r\n}\r\n\r\nexport function handleAnswerPoll(details) {\r\n  return dispatch => {\r\n    dispatch(answerPoll(details));\r\n    return saveQuestionAnswer(details).catch(e => {\r\n      console.warn(\"Error in Answering Poll\", e);\r\n      dispatch(answerPoll(details));\r\n      alert(\"There was an error Answering a Poll. Try Again.\");\r\n    });\r\n  };\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass PollTeaser extends Component {\r\n  btnStyle={\r\n    padding:10,\r\n    borderRadius:5,\r\n    border:\"2px solid white\",\r\n    color:\"white\",\r\n    backgroundColor:\"rgb(66, 82, 101)\",\r\n    ':hover':{\r\n      backgroundColor:\"white\",\r\n      color:\"#017a9b\",\r\n      border:\"2px solid #017a9b\"\r\n    }\r\n  }\r\n  render() {\r\n    let { id, text } = this.props;\r\n    let viewPollLink = `/question/${id}`;\r\n\r\n    return (\r\n      <div className=\"question-info\">\r\n        <p style={{color:\"rgb(121, 184, 243)\", fontWeight:\"bold\", fontSize:\"18px\"}} className=\"center\">{text.charAt(0).toUpperCase()+text.substring(1)+' ?'}</p>\r\n        <Link to={viewPollLink} className=\"center\">\r\n          <button style={this.btnStyle}>\r\n            View details\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ questions }, ownProps) {\r\n  const { id } = ownProps\r\n  const text = `${questions[id].optionOne.text} OR ${questions[id].optionTwo.text}`;\r\n  return {\r\n    id,\r\n    text\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(PollTeaser);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass UserCard extends Component {\r\n  render() {\r\n    const { username, avatar } = this.props;\r\n    return (\r\n      <div style={{backgroundColor: \"rgb(66, 82, 101)\", margin:20, borderRadius:5}} className=\"userCard\">\r\n        {this.props.componentName === \"PollTeaser\" ||\r\n        this.props.componentName === \"PollQuestion\" ? (\r\n          <h4 style={{color:\"white\", padding:10}} className=\"username\">{username} asks would you rather</h4>\r\n        ) : this.props.componentName === \"PollResult\" ? (\r\n          <h4 style={{color:\"white\", padding:10}} className=\"username\">Added By {username}</h4>\r\n        ) : (\r\n          <h4 style={{color:\"white\", padding:10}} className=\"username\">{username}</h4>\r\n        )}\r\n        <div style={{padding:10}} className=\"usercard-container\">\r\n          <img src={avatar} alt=\"userimage\" />\r\n          {this.props.children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ questions, users }, ownProps) {\r\n  let username = \"\";\r\n  let avatar = \"\";\r\n  if (\"userId\" in ownProps) {\r\n    let userId = ownProps.userId;\r\n    username = users[userId].name;\r\n    avatar = users[userId].avatarURL;\r\n  } else {\r\n    let id = ownProps.id;\r\n    let author = questions[id].author;\r\n    username = users[author].name;\r\n    avatar = users[author].avatarURL;\r\n  }\r\n\r\n  return {\r\n    componentName: ownProps.componentName,\r\n    username,\r\n    avatar\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(UserCard);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PollTeaser from \"./PollTeaser\";\r\nimport UserCard from \"./UserCard\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    showAnswered: false\r\n  };\r\n  filterQuestions = showAnswered => {\r\n    this.setState({\r\n       showAnswered\r\n    });\r\n  };\r\n\r\n  styles = {\r\n    btnStyle:{\r\n      background: \"#425265\",\r\n      color: \"white\",\r\n      border: 0,\r\n      margin: 5,\r\n      padding: 7\r\n    }\r\n  }\r\n  render() {\r\n    const { authUser } = this.props;\r\n    if (authUser === null) {\r\n      const redirectTo = \"/login\";\r\n      return <Redirect to={{\r\n        pathname: redirectTo,\r\n        state: { from: '/' },\r\n      }} />;\r\n    }\r\n\r\n    const { showAnswered } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"home-buttons\">\r\n          <button style={this.styles.btnStyle} onClick={() => this.filterQuestions(false)}>\r\n            Unanswered\r\n          </button>\r\n          <button style={this.styles.btnStyle} onClick={() => this.filterQuestions(true)}>Answered</button>\r\n        </div>\r\n\r\n        <ul style={{paddingLeft:0}}>\r\n          {showAnswered\r\n            ? this.props.answered.map(ques => {\r\n                let pollTeaser = <PollTeaser id={ques.id} />\r\n              \r\n                return (\r\n                  <li style={{listStyle:\"none\"}} key={ques.id}>\r\n                    <UserCard componentName='PollTeaser' id={ques.id}>{pollTeaser}</UserCard>\r\n                  </li>\r\n                );\r\n              })\r\n            : this.props.unanswered.map(ques => {\r\n                let pollTeaser = <PollTeaser id={ques.id} />\r\n\r\n                return (\r\n                  <li style={{listStyle:\"none\"}} key={ques.id}>\r\n                    <UserCard componentName='PollTeaser' id={ques.id}>{pollTeaser}</UserCard>\r\n                  </li>\r\n                );\r\n              })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ authUser, users, questions }) {\r\n  //  debugger\r\n  let answered = null;\r\n  let unanswered = null;\r\n  if (authUser !== null) {\r\n    const answeredIds = Object.keys(users[authUser].answers);\r\n    answered = Object.values(questions)\r\n      .filter(question => answeredIds.includes(question.id))\r\n      .sort((a, b) => b.timestamp - a.timestamp);\r\n    unanswered = Object.values(questions)\r\n      .filter(question => !answeredIds.includes(question.id))\r\n      .sort((a, b) => b.timestamp - a.timestamp);\r\n  }\r\n\r\n  return {\r\n    answered,\r\n    unanswered,\r\n    authUser\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleAnswerPoll } from \"../actions/shared\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass PollQuestion extends Component {\r\n  state = {\r\n    optionSelected: \"\",\r\n    answerSubmitted: false\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    let value = event.target.value;\r\n    this.setState({\r\n      optionSelected: value,\r\n    });\r\n  };\r\n  handlePollSubmit = event => {\r\n    event.preventDefault();\r\n    const { dispatch, authUser, id } = this.props;\r\n    const answer = this.state.optionSelected;\r\n    dispatch(\r\n      handleAnswerPoll({\r\n        authedUser: authUser,\r\n        qid: id,\r\n        answer\r\n      })\r\n    );\r\n    this.setState({\r\n      answerSubmitted: true\r\n    });\r\n  };\r\n\r\n  styles={\r\n    text:{\r\n      color:\"rgb(121, 184, 243)\", fontWeight:\"bold\", fontSize:\"18px\"\r\n    },\r\n    btnStyle:{\r\n      marginTop:10,\r\n      padding:8,\r\n      borderRadius:5,\r\n      border:\"2px solid white\",\r\n      color:\"white\",\r\n      backgroundColor:\"rgb(66, 82, 101)\",\r\n      ':hover':{\r\n        backgroundColor:\"white\",\r\n        color:\"#017a9b\",\r\n        border:\"2px solid #017a9b\"\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    const { optionSelected, answerSubmitted } = this.state;\r\n    const { optionOne, optionTwo } = this.props;\r\n    let redirectTo = `/question/${this.props.id}`;\r\n    if (answerSubmitted === true) {\r\n      return <Redirect to={redirectTo} />;\r\n    }\r\n    return (\r\n      <div className=\"question-info\">\r\n        <form onSubmit={this.handlePollSubmit}>\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"questionPoll\"\r\n              id=\"optionOne\"\r\n              value=\"optionOne\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n            <label style={this.styles.text} className=\"form-check-label\" htmlFor=\"optionOne\">\r\n              {optionOne}\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"questionPoll\"\r\n              id=\"optionTwo\"\r\n              value=\"optionTwo\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n            <label style={this.styles.text} className=\"form-check-label\" htmlFor=\"optionTwo\">\r\n              {optionTwo}\r\n            </label>\r\n          </div>\r\n          <button  style={this.styles.btnStyle}\r\n            type=\"submit\"\r\n            disabled={optionSelected === \"\"}\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ authUser, questions }, ownProps) {\r\n  const { id } = ownProps;\r\n    const optionOne = questions[id].optionOne.text;\r\n    const optionTwo = questions[id].optionTwo.text;\r\n    return {\r\n      optionOne,\r\n      optionTwo,\r\n      authUser,\r\n      id\r\n    };\r\n  } \r\n\r\nexport default connect(mapStateToProps)(PollQuestion);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass PollResult extends Component {\r\n  styles={\r\n    text:{\r\n      color:\"#79b8f3\"\r\n    }\r\n  }\r\n  render() {\r\n    const {\r\n      optionOneText,\r\n      optionTwoText,\r\n      optionOneVotesCount,\r\n      optionTwoVotesCount,\r\n      answeredOption\r\n    } = this.props;\r\n    let totalVotes = optionOneVotesCount + optionTwoVotesCount;\r\n    return (\r\n      <div className=\"pollResult\">\r\n        <h3 style={this.styles.text} className=\"results\">Poll Results</h3>\r\n        <div className=\"optionBox\">\r\n          <h5 style={this.styles.text} className=\"optionText\">{optionOneText}</h5>\r\n          <p style={this.styles.text} className=\"noOfVotes\">\r\n            {optionOneVotesCount} out of {totalVotes}\r\n          </p>\r\n          <p style={this.styles.text} className=\"votePercent\">\r\n            Percentage: {(optionOneVotesCount / totalVotes) * 100}\r\n          </p>\r\n        </div>\r\n        <div className=\"optionBox\">\r\n          <h5 style={this.styles.text} className=\"optionText\">{optionTwoText}</h5>\r\n          <p style={this.styles.text} className=\"noOfVotes\">\r\n            {optionTwoVotesCount} out of {totalVotes}\r\n          </p>\r\n          <p style={this.styles.text} className=\"votePercent\">\r\n            Percentage: {(optionTwoVotesCount / totalVotes) * 100}\r\n          </p>\r\n        </div>\r\n        <h4 style={{color:\"orange\"}}className=\"answeredOption\">{answeredOption}</h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//write logic to check whether authUser has answered to this ques id\r\nfunction mapStateToProps({ authUser, questions }, ownProps) {\r\n    const { id } = ownProps;\r\n      const optionOneText = questions[id].optionOne.text;\r\n      const optionTwoText = questions[id].optionTwo.text;\r\n      const optionOneVotes = questions[id].optionOne.votes;\r\n      const optionOneVotesCount = optionOneVotes.length;\r\n      const optionTwoVotes = questions[id].optionTwo.votes;\r\n      const optionTwoVotesCount = optionTwoVotes.length;\r\n      let answeredOption = \"\";\r\n      if (optionOneVotes.includes(authUser))\r\n        answeredOption = \"You answered OptionOne\";\r\n      else\r\n        answeredOption = \"You answered OptionTwo\";\r\n      return {\r\n        optionOneText,\r\n        optionTwoText,\r\n        optionOneVotesCount,\r\n        optionTwoVotesCount,\r\n        answeredOption\r\n      };\r\n    } \r\n\r\nexport default connect(mapStateToProps)(PollResult);\r\n","import React, { Component } from 'react'\r\n\r\nclass ErrorPage extends Component{\r\n    render(){\r\n        return(\r\n            <div className='errorPage'>\r\n            <h2>Error 404</h2>\r\n            <p>Page Not Found</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorPage","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PollQuestion from \"./PollQuestion\";\r\nimport PollResult from \"./PollResult\";\r\nimport UserCard from \"./UserCard\";\r\nimport ErrorPage from \"./ErrorPage\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass PollDashboard extends Component {\r\n  render() {\r\n    //if authUser is null then redirect to login with current location details.\r\n    if (this.props.authUser === null)\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/login\",\r\n            state: { from: this.props.location }\r\n          }}\r\n        />\r\n      );\r\n    else if (this.props.invalidId === true) return <ErrorPage />;\r\n    else {\r\n      const { id, answered } = this.props;\r\n      let componentToRender = null;\r\n      let componentName = null;\r\n      if (answered === true) {\r\n        componentToRender = <PollResult id={id} />;\r\n        componentName = \"PollResult\";\r\n      } else {\r\n        componentToRender = <PollQuestion id={id} />;\r\n        componentName = \"PollQuestion\";\r\n      }\r\n      return (\r\n        <UserCard componentName={componentName} id={id}>\r\n          {componentToRender}\r\n        </UserCard>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ authUser, questions }, ownProps) {\r\n  if (authUser !== null) {\r\n    const { id } = ownProps.match.params;\r\n    //check if id is valid or not\r\n    if (id in questions) {\r\n      //check if authUser has answered to this ques id\r\n      let answered = false;\r\n      const optionOneVotes = questions[id].optionOne.votes;\r\n      const optionTwoVotes = questions[id].optionTwo.votes;\r\n      if (\r\n        optionOneVotes.includes(authUser) ||\r\n        optionTwoVotes.includes(authUser)\r\n      )\r\n        answered = true;\r\n      return {\r\n        authUser,\r\n        id,\r\n        answered,\r\n        invalidId: false\r\n      };\r\n    } else\r\n      return {\r\n        authUser,\r\n        invalidId: true\r\n      };\r\n  } else\r\n    return {\r\n      authUser\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PollDashboard);\r\n","import React, { Component } from \"react\";\r\n\r\nclass Leaderboard extends Component {\r\n  styles = {\r\n    color: \"rgb(121, 184, 243)\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"18px\",\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      questionsAnswered,\r\n      questionsAsked,\r\n      totalScore,\r\n    } = this.props.userObj;\r\n    return (\r\n      <div className=\"leaderboard\">\r\n        <h4 style={this.styles}> Question Answered: {questionsAnswered}</h4>\r\n        <h4 style={this.styles}>Question Asked: {questionsAsked}</h4>\r\n        <h4 style={this.styles}>\r\n          Total: <span className=\"leaderboardRank\">{totalScore}</span>\r\n        </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Leaderboard;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Leaderboard from \"./Leaderboard\";\r\nimport UserCard from \"./UserCard\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass LeaderboardDb extends Component {\r\n  render() {\r\n    const { authUser } = this.props;\r\n    if (authUser === null) {\r\n      const redirectTo = \"/login\";\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: redirectTo,\r\n            state: { from: this.props.location }\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    const { users } = this.props;\r\n\r\n    let usersInfo = Object.keys(users).map(userId => {\r\n      let questionsAnswered = Object.keys(users[userId].answers).length;\r\n      let questionsAsked = Object.keys(users[userId].questions).length;\r\n\r\n      return {\r\n        userId,\r\n        questionsAnswered: questionsAnswered,\r\n        questionsAsked: questionsAsked,\r\n        totalScore: questionsAnswered + questionsAsked\r\n      };\r\n    });\r\n\r\n    usersInfo.sort((a, b) => {\r\n      if (b.totalScore < a.totalScore) return -1;\r\n      if (b.totalScore > a.totalScore) return 1;\r\n      return 0;\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <ul style={{paddingLeft:0}}>\r\n          {usersInfo.map(userObj => {\r\n            let leaderboard = <Leaderboard userObj={userObj} />;\r\n            return (\r\n              <li style={{listStyle:\"none\"}} key={userObj.userId}>\r\n                <UserCard componentName=\"leaderboard\" userId={userObj.userId}>\r\n                  {leaderboard}\r\n                </UserCard>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ authUser, users }) {\r\n  return {\r\n    authUser,\r\n    users\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(LeaderboardDb);\r\n","export const SET_AUTH_USER = 'SET_AUTH_USER';\r\nexport const LOGOUT = 'LOGOUT'\r\n\r\nexport function setAuthUser(authUserId) {\r\n  return {\r\n    type: SET_AUTH_USER,\r\n    authUserId\r\n  };\r\n}\r\n\r\nexport function handleLogout(){\r\n  return{\r\n    type: LOGOUT\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setAuthUser } from \"../actions/authUser\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    authUserId: null,\r\n    submit: false\r\n  };\r\n  handleUserChange = event => {\r\n    const authUserId = event.target.value;\r\n\r\n    this.setState(currentState => ({\r\n      authUserId,\r\n      submit: currentState.submit\r\n    }));\r\n  };\r\n\r\n  handleLogin = event => {\r\n    event.preventDefault();\r\n    const { authUserId } = this.state;\r\n    const { dispatch } = this.props;\r\n    dispatch(setAuthUser(authUserId));\r\n    this.setState({\r\n      submit: true\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { submit } = this.state;\r\n\r\n    if (submit ) {\r\n     // debugger\r\n      if(this.props.location.state === undefined){\r\n        return <Redirect to='/' />;\r\n      }else{\r\n        const {from} = this.props.location.state\r\n        return <Redirect to={from} />;\r\n      }\r\n      \r\n    }\r\n    const { userIds } = this.props;\r\n    return (\r\n      <div className=\"login\">\r\n      <h3>Please Login:</h3>\r\n        <form id=\"Login\" onSubmit={this.handleLogin}>\r\n          <div className=\"form-group\">\r\n            <select\r\n              className=\"form-control\"\r\n              id=\"userId\"\r\n              onChange={this.handleUserChange}\r\n            >\r\n              <option></option>\r\n              {userIds.map(userId => {\r\n                return (\r\n                  <option key={userId} value={userId}>\r\n                    {userId}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n            disabled={this.state.userSelected === \"\"}\r\n          >\r\n            Login\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ users }) {\r\n  const userIds = Object.keys(users);\r\n  return {\r\n    userIds\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Login);\r\n","import React, { Component } from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Navigationbar extends Component {\r\n\r\n  styles = {\r\n    navContainer:{\r\n    display:\"flex\",\r\n    justifyContent:\"space-between\"\r\n    },\r\n    navItems:{\r\n      color:\"white\"\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav style={{backgroundColor:\"#0f171e\"}} className=\"navbar navbar-expand \">\r\n            <div className=\"collapse navbar-collapse\" style={this.styles.navContainer}>\r\n              <ul className=\"navbar-nav\">\r\n                <NavLink \r\n                  to=\"/\"\r\n                  exact\r\n                  activeClassName=\"active\"\r\n                  className=\"nav-item nav-link\"\r\n                  style={this.styles.navItems}\r\n                >\r\n                  Home\r\n                </NavLink>\r\n                <NavLink\r\n                  to=\"/add\"\r\n                  exact\r\n                  activeClassName=\"active\"\r\n                  className=\"nav-item nav-link\"\r\n                  style={this.styles.navItems}\r\n                >\r\n                  New Question\r\n                </NavLink>\r\n                <NavLink\r\n                  to=\"/leaderboard\"\r\n                  exact\r\n                  activeClassName=\"active\"\r\n                  className=\"nav-item nav-link\"\r\n                  style={this.styles.navItems}\r\n                >\r\n                  Leaderboard\r\n                </NavLink>\r\n              </ul>\r\n              {this.props.authUser !== null ? (\r\n                <div>\r\n                  <span style={this.styles.navItems} >\r\n                    Hello {this.props.authUser}\r\n                  </span>\r\n                  <span style={{marginLeft:15}}>\r\n                    <Link to=\"/logout\">\r\n                      <button className=\"btn-sm btn-info\">Logout</button>\r\n                    </Link>\r\n                  </span>\r\n                </div>\r\n              ) : (\r\n                <span style={this.styles.navItems}>\r\n                  Hello\r\n                </span>\r\n              )}\r\n            </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ authUser }) {\r\n  return {\r\n    authUser\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Navigationbar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleAddQuestion } from \"../actions/questions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nclass NewQuestion extends Component {\r\n  state = {\r\n    optionOneText: \"\",\r\n    optionTwoText: \"\",\r\n    submit: false\r\n  };\r\n\r\n  handleChange = event => {\r\n    if (event.target.name === \"optionOne\") {\r\n      let value = event.target.value;\r\n      this.setState(currentState => ({\r\n        optionOneText: value,\r\n        optionTwoText: currentState.optionTwoText,\r\n        submit: currentState.submit\r\n      }));\r\n    } else {\r\n      let value = event.target.value;\r\n      this.setState(currentState => ({\r\n        optionOneText: currentState.optionOneText,\r\n        optionTwoText: value,\r\n        submit: currentState.submit\r\n      }));\r\n    }\r\n  };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const author = this.props.authUser;\r\n    const dispatch = this.props.dispatch;\r\n    const { optionOneText, optionTwoText } = this.state;\r\n    dispatch(\r\n      handleAddQuestion({\r\n        author,\r\n        optionOneText,\r\n        optionTwoText\r\n      })\r\n    );\r\n    this.setState({\r\n      submit: true\r\n    });\r\n  };\r\n  render() {\r\n    const { authUser } = this.props;\r\n    if (authUser === null)\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/login\",\r\n            state: { from: this.props.location }\r\n          }}\r\n        />\r\n      );\r\n\r\n    const { submit } = this.state;\r\n    if (submit) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div style={{marginLeft:\"auto\"}}>\r\n        <h4>Would You Rather:</h4>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"optionOne\">Please enter Option One</label>\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            name=\"optionOne\"\r\n            id=\"optionOne\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <br />\r\n          <label htmlFor=\"optionTwo\">Please enter Option Two</label>\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            name=\"optionTwo\"\r\n            id=\"optionTwo\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <br />\r\n          <input type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ authUser }) {\r\n  return {\r\n    authUser\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(NewQuestion);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleLogout } from \"../actions/authUser\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount(){\r\n    const { dispatch } = this.props;\r\n    dispatch(handleLogout());\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"logout\">\r\n        <h2>You have currently been logged out</h2>\r\n        <Link to=\"/login\">Proceed to login</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(Logout);\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { loadData } from \"../actions/shared\";\nimport Dashboard from \"./Dashboard\";\nimport PollDashboard from \"./PollDashboard\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport LeaderboardDb from \"./LeaderboardDb\";\nimport Login from \"./Login\";\nimport Navigationbar from \"./Navigationbar\";\nimport NewQuestion from \"./NewQuestion\";\nimport ErrorPage from \"./ErrorPage\";\nimport Logout from './Logout'\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch(loadData());\n  }\n  render() {\n    return (\n      <Router>\n        <div>\n          {this.props.loading ? null : (\n            <div>\n              <Navigationbar />\n              <div>\n                <Switch>\n                  <Route path=\"/\" exact component={Dashboard} />\n                  <Route\n                    path=\"/question/:id\"\n                    exact\n                    component={PollDashboard}\n                  />\n                  <Route path=\"/login\" exact component={Login} />\n                  <Route path=\"/logout\" exact component={Logout} />\n                  <Route path=\"/add\" exact component={NewQuestion} />\n                  <Route path=\"/leaderboard\" exact component={LeaderboardDb} />\n                  <Route component={ErrorPage} />\n                </Switch>\n              </div>\n            </div>\n          )}\n        </div>\n      </Router>\n    );\n  }\n}\n\nfunction mapStateToProps({ loading }) {\n  //debugger;\n  return {\n    loading\n  };\n}\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux';\r\nimport authUser from '../reducers/authUser';\r\nimport questions from '../reducers/questions';\r\nimport users from '../reducers/users';\r\nimport loading from '../reducers/loading'\r\n\r\nexport default combineReducers({\r\n  authUser,\r\n  questions,\r\n  users,\r\n  loading\r\n});","import { SET_AUTH_USER, LOGOUT } from '../actions/authUser';\r\n\r\nexport default function authUser(state = null, action) {\r\n  if (action.type === SET_AUTH_USER) {\r\n    return action.authUserId;\r\n  }else if(action.type === LOGOUT)\r\n    return null\r\n  return state;\r\n}","import { RECEIVE_QUESTIONS, ADD_QUESTION } from \"../actions/questions\";\r\nimport { ANSWER_POLL } from \"../actions/shared\";\r\n\r\nexport default function questions(state = {}, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        ...action.questions\r\n      };\r\n    case ANSWER_POLL:\r\n      const { authedUser, qid, answer } = action.details; //details={authedUser: johndow, qid: xxx, answer: optionTwo}\r\n      return {\r\n        ...state,\r\n        [qid]: {\r\n          ...state[qid],\r\n          [answer]: {\r\n            ...state[qid][answer],\r\n            votes: state[qid][answer].votes.concat([\r\n              authedUser\r\n            ])\r\n          }\r\n        }\r\n      };\r\n      case ADD_QUESTION:\r\n        return{\r\n          ...state,\r\n          [action.question.id]:{\r\n            ...action.question\r\n          }\r\n           \r\n          \r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { RECEIVE_USERS } from \"../actions/users\";\r\nimport { ANSWER_POLL } from \"../actions/shared\";\r\nimport { ADD_QUESTION } from \"../actions/questions\";\r\n\r\nexport default function users(state = {}, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_USERS:\r\n      return {\r\n        ...state,\r\n        ...action.users\r\n      };\r\n    case ANSWER_POLL:\r\n      const { authedUser, qid, answer } = action.details;\r\n      return {\r\n        ...state,\r\n        [authedUser]: {\r\n          ...state[authedUser],\r\n          answers: {\r\n            ...state[authedUser].answers,\r\n            [qid]: answer\r\n          }\r\n        }\r\n      };\r\n    case ADD_QUESTION:\r\n      return {\r\n        ...state,\r\n        [action.question.author]: {\r\n          ...state[action.question.author],\r\n          questions: \r\n            state[action.question.author].questions.concat([action.question.id]),  //state[johndoe]\r\n            \r\n          \r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { DATA_LOADED } from '../actions/loading';\r\n\r\nexport default function loading(state = true, action) {\r\n  if (action.type === DATA_LOADED) {\r\n    return action.loading;\r\n  }\r\n  return state;\r\n}","const logger = store => next => action => {\r\n    console.group(action.type);\r\n    console.log('The action:', action);\r\n    const returnValue = next(action);\r\n    console.log('The new state: ', store.getState());\r\n    console.groupEnd();\r\n    return returnValue;\r\n  };\r\n  \r\n  export default logger;","import thunk from 'redux-thunk';\r\nimport logger from './logger';\r\nimport { applyMiddleware } from 'redux';\r\n\r\nexport default applyMiddleware(thunk, logger);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/index';\nimport middleware from './middlewares';\n\nconst store = createStore(rootReducer, middleware);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}